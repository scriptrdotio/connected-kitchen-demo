var formatter = require("smartkitchens/entities/utils");
var deviceManager = require("smartkitchens/entities/devicemanager")

var groupManager = require("smartkitchens/entities/groupmanager");
var utils = require("smartkitchens/entities/devicemanager");
var log = require("log");

log.setLevel("INFO");


var device = require("device");

var getUser = device.get(request.user.id);
var userGroups = getUser.result["groups"];
var userGroups = (userGroups)? ((typeof userGroups == 'string') ?  [userGroups] : userGroups) :["scriptrio"];

var query = {};
if(request.body != null){
	query = request.body;
}else if(request.parameters.body){
	query = request.parameters.body;
} else {
  query = request.parameters;
}

if(typeof query == 'string' && params != null){
  	try{
    	query = JSON.parse(params);   
    }catch(e){
      	return "INVALID OR MISSING PARAMETER";
    }
}

var result = getDevices(userGroups, query.id);

result =  formatter.format(result);

return result;


function getDevices(userGroups, deviceId) {
  var documents = []
  for(var i = 0; i < userGroups.length; i++){
      var devices = groupManager.getGroupDevices(userGroups[i]);
      for(var j = 0; j < devices.length; j++) {
           if(deviceId) {
               if(devices.indexOf(deviceId) != -1) {
                  var entries = deviceManager.getHistoricalDeviceEntries(deviceId)
                  if(entries)
                     documents = entries
                  else 
                      documents = []
                  return documents;
               }
           } 
      }
      
  }
}
